# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://help.github.com/actions/language-and-framework-guides/publishing-nodejs-packages

name: Node.js Package

on:
  push:
    branches:
      - main

env:
  DB_USER: postgres
  DB_PASSWORD: postgres
  DB_DATABASE: indexer
  DB_HOST: localhost
  DB_PORT: 5432

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: indexer
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: npm install
      - name: migrations
        run: npm run migrations:local
      - name: tests
        run: npm run test
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: npm install
      - name: Get version from package.json before release step
        id: initversion
        run: echo "version=$(npm run get-version --silent)" >> $GITHUB_OUTPUT
      - name: Release to NPM and GitHub
        id: release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GIT_AUTHOR_NAME: bot-flowbuilld
          GIT_AUTHOR_EMAIL: bot.flowbuild@gmail.com
          GIT_COMMITTER_NAME: bot-flowbuilld
          GIT_COMMITTER_EMAIL: bot.flowbuild@gmail.com
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
        run: npm run release
      - name: Get version from package.json after release step
        id: extractver
        run: echo "version=$(npm run get-version --silent)" >> $GITHUB_OUTPUT
      - name: Create Pull Request with updated package files
        if: steps.initversion.outputs.version != steps.extractver.outputs.version
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.GH_TOKEN }}
          commit-message: "chore(release): ${{ steps.extractver.outputs.version }}"
          committer: bot-flowbuilld <bot.flowbuild@gmail.com>
          author: bot-flowbuilld <bot.flowbuild@gmail.com>
          title: "chore(release): ${{ steps.extractver.outputs.version }}"
          body: "Version bump in package.json and package-lock.json for release [${{ steps.extractver.outputs.version }}](https://github.com/${{github.repository}}/releases/tag/v${{ steps.extractver.outputs.version }})"
          branch: version-bump/${{ steps.extractver.outputs.version }}
